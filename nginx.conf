
user root;
worker_processes auto;
error_log /var/log/nginx/error.log;

include /usr/share/nginx/modules/*.conf;

events {
    use epoll;
    multi_accept on;
    accept_mutex on;
    worker_connections 65535;
}

stream {
    log_format proxy '$remote_addr [$time_local] '
                 '$protocol $status $bytes_sent $bytes_received '
                 '$session_time "$upstream_addr" '
                 '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log /var/log/nginx/tcp-access.log proxy;
    open_log_file_cache off;
    # SNI识别，将一个个域名映射成一个配置名
    map $ssl_preread_server_name $stream_map {
        default others;
        updates.cdn-apple.com shadowtls;
	hcaptcha.com hca;
	github.com github;
	pkgs.tailscale.com tailscale;
	glados.one glados;
    }
        upstream glados {
       server glados.one:443;
       }       
       
        upstream tailscale {
        server pkgs.tailscale.com:443;
    }
        upstream github {
        server github.com:443;
    }
        upstream hca {
        server hcaptcha.com:443;
    }
 
    # upstream,也就是流量上游的配置
    upstream shadowtls {
        server 127.0.0.1:444;
    }
    upstream others {
        server unix:/dev/shm/nginx.sock;
    }
    # stream模块监听443端口，并进行端口复用
    server {
        listen 443 reuseport;
        proxy_pass $stream_map;
	ssl_preread on;
    }
}


http {
    charset utf-8;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '$ssl_protocol/$ssl_cipher '
    '"$http_user_agent" "$http_x_forwarded_for" '
    '$proxy_protocol_addr:$proxy_protocol_port';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 0;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384;

    keepalive_timeout 600s; # 
    keepalive_requests 4294967295;

    upstream qbitterent {
        server 127.0.0.1:8080;
        keepalive 8;
    }

    server {
       listen unix:/dev/shm/nginx.sock ssl default_server;
       server_name _;
       ssl_reject_handshake on;
   }   

    server {
        listen unix:/dev/shm/nginx.sock ssl http2 so_keepalive=on;
        server_name ap-ol-liteserver.fly97.fun;

        ssl_certificate /usr/local/bin/cert.pem;
        ssl_certificate_key /usr/local/bin/key.pem;


        location ^~ /my/ {
            auth_basic "Permission Denied";
            auth_basic_user_file /usr/local/passwd;
            alias /mnt/;
            autoindex on;
            proxy_force_ranges on;
            max_ranges 32;
            autoindex_exact_size off;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }

        location /qb/ {
            proxy_redirect off;
            proxy_pass http://qbitterent/;
            proxy_set_header Host $host;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            proxy_no_cache $http_range $http_if_range;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            http2_push_preload on;
            client_max_body_size 0;
        }

        location / {
            return 301 https://www.apple.com;
        }

   }
}
